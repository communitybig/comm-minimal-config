#!/bin/bash
# Installation file for comm-minimal-config

# Define colors for output
red='\e[1;31m'
green='\e[1;32m'
yellow='\e[1;33m'
blue='\e[1;34m'
nc='\e[0m' # No Color

# List of files to replace
conflictFiles=(
    "/etc/issue"
    "/etc/skel/.bash_logout"
    "/etc/skel/.bash_profile"
    "/etc/skel/.bashrc"
    "/usr/share/kbd/consolefonts/default8x16.psfu.gz"
)

# Function executed after package installation
post_install() {
    echo -e "${blue}Installing custom configuration files...${nc}"
    
    # Create backup directory
    mkdir -p /var/lib/pacman/comm-minimal-config-backups
    
    # Process each file
    for file in "${conflictFiles[@]}"; do
        # Get base filename without path
        filename=$(basename "$file")
        directory=$(dirname "$file")
        source_path="/usr/share/comm-minimal-config/custom-configs$file"
        
        # Only proceed if source file exists
        if [ -f "$source_path" ]; then
            # Backup original file if it exists
            if [ -f "$file" ]; then
                echo -e "${yellow}Backing up $file to /var/lib/pacman/comm-minimal-config-backups/${filename}${nc}"
                cp -f "$file" "/var/lib/pacman/comm-minimal-config-backups/${filename}"
            fi
            
            # Create directory if it doesn't exist
            mkdir -p "$directory"
            
            # Copy custom file to destination
            echo -e "${green}Installing $source_path to $file${nc}"
            cp -f "$source_path" "$file"
        fi
    done
    
    echo -e "${green}Custom configuration files installed successfully.${nc}"
    echo -e "${yellow}Original files have been backed up to /var/lib/pacman/comm-minimal-config-backups/${nc}"
}

# Function executed before package upgrade
pre_upgrade() {
    # No need to do anything special before upgrade
    echo -e "${blue}Preparing to upgrade package...${nc}"
}

# Function executed after package upgrade
post_upgrade() {
    post_install
}

# Function executed before package removal
pre_remove() {
    echo -e "${blue}Preparing to remove package...${nc}"
}

# Function executed after package removal
post_remove() {
    echo -e "${blue}Restoring original configuration files...${nc}"
    
    # Process each file
    for file in "${conflictFiles[@]}"; do
        # Get base filename without path
        filename=$(basename "$file")
        backup_path="/var/lib/pacman/comm-minimal-config-backups/${filename}"
        
        # Only restore if backup exists
        if [ -f "$backup_path" ]; then
            echo -e "${yellow}Restoring $backup_path to $file${nc}"
            cp -f "$backup_path" "$file"
        fi
    done
    
    echo -e "${green}Original configuration files have been restored.${nc}"
    echo -e "${yellow}Backup files will remain in /var/lib/pacman/comm-minimal-config-backups/ for reference${nc}"
}