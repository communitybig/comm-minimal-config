# ~/.bashrckali: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
*i*) ;;
*) return ;;
esac

# BigCommunity Blue Theme Colors - Adjusted for better visibility in TTY
BLUE_DARK="\e[38;5;33m"      # Brighter dark blue for TTY visibility
MEDIUM_BLUE="\e[38;5;32m"    # Medium blue (#0077B6)
LIGHT_BLUE="\e[38;5;39m"     # Light blue (#00A8E8)
CYAN="\e[38;5;45m"           # Cyan (#00D4FF)
WHITE="\e[97m"               # White
WHITE_BOLD="\e[1;97m"        # White Bold
RESET="\e[0m"                # Reset colors

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
	debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
xterm-color | *-256color) color_prompt=yes ;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
	if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
		# We have color support; assume it's compliant with Ecma-48
		# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
		# a case would tend to support setf rather than setaf.)
		color_prompt=yes
	else
		color_prompt=
	fi
fi

# The following block is surrounded by two delimiters.
# These delimiters must not be modified. Thanks.
# START KALI CONFIG VARIABLES
PROMPT_ALTERNATIVE=twoline
NEWLINE_BEFORE_PROMPT=yes
# STOP KALI CONFIG VARIABLES

if [ "$color_prompt" = yes ]; then
	# override default virtualenv indicator in prompt
	VIRTUAL_ENV_DISABLE_PROMPT=1

	# PS1 formatting colors - using proper escaping for prompt
	reset='\[\033[0m\]'
	blue_dark='\[\e[38;5;33m\]'
	medium_blue='\[\e[38;5;32m\]'
	light_blue='\[\e[38;5;39m\]'
	cyan='\[\e[38;5;45m\]'
	white='\[\e[97m\]'
	white_bold='\[\e[1;97m\]'
	
	# No emoji - changing prompt symbol to nothing
	prompt_symbol=""
	if [ "$EUID" -eq 0 ]; then # Change prompt colors for root user
		color_user="$white_bold"
		prompt_symbol=""
	else
		color_user="$white"
		prompt_symbol=""
	fi

  # Function to get status of last command
  function get_exit_status() {
    local status="$?"
    if [ $status -eq 0 ]; then
      echo -e "${LIGHT_BLUE}[${WHITE}${status}${LIGHT_BLUE}] ${CYAN}✔${RESET}"
    else
      echo -e "${LIGHT_BLUE}[${WHITE}${status}${LIGHT_BLUE}] ${MEDIUM_BLUE}✘${RESET}"
    fi
  }

	case "$PROMPT_ALTERNATIVE" in
	twoline)
		PS1=$blue_dark'┌──${debian_chroot:+($debian_chroot)──}${VIRTUAL_ENV:+('$white'$(basename $VIRTUAL_ENV)'$blue_dark')}\
('$cyan'\u'$medium_blue'@'$light_blue'\h'$reset')-'$white'\w'$light_blue']'$reset'$(get_exit_status)\n'$blue_dark'└─\$'$reset' '
		;;
	oneline)
		PS1='${VIRTUAL_ENV:+($(basename $VIRTUAL_ENV)) }${debian_chroot:+($debian_chroot)}'$light_blue'\u@\h'$reset':'$cyan'\w'$reset'\$ '
		;;
	backtrack)
		PS1='${VIRTUAL_ENV:+($(basename $VIRTUAL_ENV)) }${debian_chroot:+($debian_chroot)}'$light_blue'\u@\h'$reset':'$cyan'\w'$reset'\$ '
		;;
	esac
else
	PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm* | rxvt* | Eterm | aterm | kterm | gnome* | alacritty)
	PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
	;;
*) ;;
esac

[ "$NEWLINE_BEFORE_PROMPT" = yes ] && PROMPT_COMMAND="PROMPT_COMMAND=echo"

# enable color support of ls, less and man, and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
	test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
	export LS_COLORS="$LS_COLORS:ow=30;44:" # fix ls color for folders with 777 permissions

	alias ls="ls -CF -h --color=auto --group-directories-first"
	alias vdir='vdir --color=auto'
	alias grep='grep --color=auto'
	alias fgrep='fgrep --color=auto'
	alias egrep='egrep --color=auto'
	alias diff='diff --color=auto'
	alias ip='ip --color=auto'

	# Use BigCommunity blue colors for less
	export LESS_TERMCAP_mb=$'\E[1;38;5;39m'  # begin blink (light blue)
	export LESS_TERMCAP_md=$'\E[1;38;5;45m'  # begin bold (cyan)
	export LESS_TERMCAP_me=$'\E[0m'          # reset bold/blink
	export LESS_TERMCAP_so=$'\E[38;5;33m\E[48;5;231m' # begin reverse video (blue on white)
	export LESS_TERMCAP_se=$'\E[0m'          # reset reverse video
	export LESS_TERMCAP_us=$'\E[38;5;32m'    # begin underline (medium blue)
	export LESS_TERMCAP_ue=$'\E[0m'          # reset underline
fi

# colored GCC warnings and errors
export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# some more ls aliases
alias ll='ls -l'
alias la='ls -A'
alias l='ls -CF'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
	. ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
	if [ -f /usr/share/bash-completion/bash_completion ]; then
		. /usr/share/bash-completion/bash_completion
	elif [ -f /etc/bash_completion ]; then
		. /etc/bash_completion
	fi
fi

# TTY specific configurations
if [ "$TERM" = "linux" ]; then
    # Define brighter colors for the TTY console
    echo -en "\e]P4003399" # redefine the dark blue to a brighter shade
fi
